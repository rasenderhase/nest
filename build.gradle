apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = theGroup
version = theVersion
sourceCompatibility = theSourceCompatibility

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

jar {
	manifest {
		attributes 'Implementation-Title': 'nest NikEm STack',
		'Implementation-Version': version
	}
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.0'
	compile 'javax.websocket:javax.websocket-api:1.1'
	compile 'javax.servlet:jstl:1.2'
	
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.23.2'
	compile('org.glassfish.jersey.ext:jersey-mvc-jsp:2.23.2') {
		exclude group: 'javax.servlet', module: 'servlet-api'
	}
//	compile 'org.jboss.weld.servlet:weld-servlet-core:2.4.0.Final'
//	compile 'org.glassfish.jersey.ext.cdi:jersey-cdi1x:2.23.2'
//	compile 'org.glassfish.jersey.ext.cdi:jersey-weld2-se:2.23.2'
	testCompile 'junit:junit:4.+'
	testCompile 'org.mockito:mockito-core:1.10.19'
}

test {
	systemProperties 'property': 'value'
}

[compileJava,compileTestJava]*.options*.encoding = 'UTF-8'

eclipseJdt << {
	File f = file('.settings/org.eclipse.core.resources.prefs')
	f.write('eclipse.preferences.version=1\n')
	f.append('encoding/<project>=UTF-8')
}
publishing {
	publications {
        mavenJava(MavenPublication) {
        	groupId group
        
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url "https://TEAMCITY:8081/artifactory/ext-release-local"
            credentials {
            	username "xxx"
            	password "xxx"
        	}
        }
    }
}